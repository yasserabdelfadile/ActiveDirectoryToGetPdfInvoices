// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication25.Models.Data;

#nullable disable

namespace WebApplication25.Migrations
{
    [DbContext(typeof(Model))]
    [Migration("20230803072326_CreatTables")]
    partial class CreatTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityRoleEntityUserID", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserIDID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "UserIDID");

                    b.HasIndex("UserIDID");

                    b.ToTable("EntityRoleEntityUserID");
                });

            modelBuilder.Entity("EntityRoleSiteEntity", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("SiteID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "SiteID");

                    b.HasIndex("SiteID");

                    b.ToTable("EntityRoleSiteEntity");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.EntityRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.EntityUserID", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SID")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SamAccountName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("UserID");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.RoleSiteEntity", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("SiteID")
                        .HasColumnType("int");

                    b.Property<int?>("SiteEntityID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "SiteID");

                    b.HasIndex("SiteEntityID");

                    b.HasIndex("SiteID");

                    b.ToTable("RoleSite");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.RoleUserIDEntity", b =>
                {
                    b.Property<int>("EntityRoleID")
                        .HasColumnType("int");

                    b.Property<int>("EntityUser")
                        .HasColumnType("int");

                    b.HasKey("EntityRoleID", "EntityUser");

                    b.HasIndex("EntityUser");

                    b.ToTable("RoleUserID");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.SiteEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Site_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("EntityRoleEntityUserID", b =>
                {
                    b.HasOne("WebApplication25.Models.Data.EntityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication25.Models.Data.EntityUserID", null)
                        .WithMany()
                        .HasForeignKey("UserIDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityRoleSiteEntity", b =>
                {
                    b.HasOne("WebApplication25.Models.Data.EntityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication25.Models.Data.SiteEntity", null)
                        .WithMany()
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication25.Models.Data.RoleSiteEntity", b =>
                {
                    b.HasOne("WebApplication25.Models.Data.EntityRole", "Role")
                        .WithMany("RoleSite")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication25.Models.Data.SiteEntity", null)
                        .WithMany("RoleSite")
                        .HasForeignKey("SiteEntityID");

                    b.HasOne("WebApplication25.Models.Data.SiteEntity", "Site")
                        .WithMany()
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.RoleUserIDEntity", b =>
                {
                    b.HasOne("WebApplication25.Models.Data.EntityRole", "Role")
                        .WithMany("RoleUserID")
                        .HasForeignKey("EntityRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication25.Models.Data.EntityUserID", "UserID")
                        .WithMany("RoleUserID")
                        .HasForeignKey("EntityUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserID");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.EntityRole", b =>
                {
                    b.Navigation("RoleSite");

                    b.Navigation("RoleUserID");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.EntityUserID", b =>
                {
                    b.Navigation("RoleUserID");
                });

            modelBuilder.Entity("WebApplication25.Models.Data.SiteEntity", b =>
                {
                    b.Navigation("RoleSite");
                });
#pragma warning restore 612, 618
        }
    }
}
